<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: be8baf89c0016c1c39ab0b85cafca28c8364e95b Maintainer: nilgun Status: ready -->
<refentry xml:id="function.session-gc" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>session_gc</refname>
  <refpurpose>Oturum verisi çöpünü toplar</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type class="union"><type>int</type><type>false</type></type><methodname>session_gc</methodname>
   <void/>
  </methodsynopsis>
  <para>
   <function>session_gc</function> oturum verisi çöpünü toplamak için
   kullanılır. PHP, öntanımlı olarak olasılık tabanlı oturum çöpçülüğü yapar.
  </para>
  <para>
   Olasılığa dayalı çöpçülük bir dereceye kadar çalışır ancak birkaç sorunu
   vardır. 1) Düşük trafikli sitelerin oturum verileri tercih edilen süre
   içerisinde silinmeyebilir. 2) Yüksek trafikli sitelerin çöpleri çok sık
   toplanabilir. 3) Çöp toplama, kullanıcının isteği üzerine gerçekleştirilir
   ve kullanıcı çöp toplama sırasında gecikme yaşar.
  </para>
  <para>
   Bu nedenle, çöp toplama işleminin düzenli aralıklarla (örneğin UNIX benzeri
   sistemlerde "cron" ile) yapılması önerilir. <link
   linkend="ini.session.gc-probability">session.gc_probability</link>
   yönergesine 0 atayarak olasılık tabanlı çöpçülük devre dışı bırakılmalıdır.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  &no.function.parameters;
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   <function>session_gc</function> başarı durumunda silinen oturum verisi
   miktarını, aksi takdirde &false; döndürür
  </para>
  <para>
   Eski kaydeteme işleyiciler silinen veri miktarını döndürmez, sadece başarı
   durumunu döndürür, bu durumda başarıyla silinen verinin miktarı daima 1
   olur.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>- cron gibi bir görev yöneticisi ile <function>session_gc</function> kullanımı</title>
    <programlisting role="php">
<![CDATA[
<?php
// Önemli: Bu betik http sunucusunun kullanıcı kimliğinde çalıştırılmalıdır.

// Oturum veri deposunu ilklendirmek için etkin oturum gerekir.
session_start();

// Çöpçüyü devreye sok
session_gc();

// session_gc() ile oluşturulmuş oturum kimliğini temizle
session_destroy();
?>
]]>
    </programlisting>
   </example>
   <example>
    <title>- Kullanıcı erişimli betik ile <function>session_gc</function> kullanımı</title>
    <programlisting role="php">
<![CDATA[
<?php
// Bilgi: session_gc() işlevinin görev yöneticisi betiği ile kullanılması
// önerilirse de aşağıdaki gibi de kullanılabilir.

// Son çöp toplama zamanının denetimi için
$gc_time = '/tmp/php_session_last_gc';
$gc_period = 1800;

session_start();
// Çöpçü sadece çöp toplama zamanı geldiğinde çalışsın.
// Her istekte session_gc() çağrısı kaynak israfı olur.
if (file_exists($gc_time)) {
    if (filemtime($gc_time) < time() - $gc_period) {
        session_gc();
        touch($gc_time);
    }
} else {
    touch($gc_time);
}
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>session_start</function></member>
    <member><function>session_destroy</function></member>
    <member>
     <link linkend="ini.session.gc-probability">session.gc_probability</link>
     yapılandırma yönergesi
    </member>
   </simplelist>
  </para>
 </refsect1>
</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
