<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 87a266cdd7f53bc86cd22d21af289b9a75f57f94 Maintainer: nilgun Status: ready -->
<refentry xmlns="http://docbook.org/ns/docbook" xml:id="function.ob-list-handlers">
 <refnamediv>
  <refname>ob_list_handlers</refname>
  <refpurpose>Kullanımdaki çıktı eylemcileri listeler</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>array</type><methodname>ob_list_handlers</methodname>
   <void/>
  </methodsynopsis>
  <para>
   Kullanımdaki çıktı eylemcileri listeler.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  &no.function.parameters;
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Kullanımdaki çıktı eylemcileri (varsa) içeren bir dizi döndürür.
  </para>
  <para>
   Eğer <link linkend="ini.output-buffering">çıktı tamponlaması</link> etkinse
   ve <link linkend="ini.output-handler">output_handler</link> atanmamışsa veya
   <function>ob_start</function> ile bir geriçağırım işlevi belirtilmemişse ya
   da &null; belirtilmişse "öntanımlı çıktı işleyicisi" döner.
   <link linkend="ini.output-buffering">çıktı tamponlaması</link>nı
   etkinleştirmek ve bir <link linkend="ini.output-handler">çıktı işleyicisi</link>
   belirtmek <function>ob_start</function> işlevine bir
   <link linkend="functions.internal">dahili (yerleşik) işlev</link> aktarmaya
   eşdeğerdir.
  </para>
  <para>
   <function>ob_start</function> işlevine bir geriçağırım işlevi aktarılmışsa,
   geriçağırım işlevinin <link linkend="language.namespaces.basics">tam
   nitelenmiş ismi</link> döner. Geriçağırım işlevi olarak
   <link linkend="language.oop5.magic.invoke">__invoke()</link> sınıfını
   gerçekleyen bir nesne belirtilmişse bu nesnenin
   <link linkend="language.oop5.magic.invoke">__invoke()</link> yönteminin
   <link linkend="language.namespaces.basics">tam nitelenmiş ismi</link> döner.
   Geriçağırım işlevi olarak bir <classname>Closure</classname> belirtilmişse,
   <literal>"Closure::__invoke"</literal> döner.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>- <function>ob_list_handlers</function> işlevi</title>
    <programlisting role="php">
<![CDATA[
<?php
// output_buffering=On ve çıktı işleyici yok
var_dump(ob_list_handlers());
ob_end_flush();

// geriçağırım yok ya da null
ob_start();
var_dump(ob_list_handlers());
ob_end_flush();

// anonim işlev
ob_start(function($string) { return $string; });
var_dump(ob_list_handlers());
ob_end_flush();

// ok işlevi
ob_start(fn($string) => $string);
var_dump(ob_list_handlers());
ob_end_flush();

// kullanıcı tanımlı işlev ve __invoke
$firstClassCallable = userDefinedFunction(...);

ob_start([$firstClassCallable, '__invoke']);
var_dump(ob_list_handlers());
ob_end_flush();

// dahili (yerleşik) işlev
ob_start('print_r');
var_dump(ob_list_handlers());
ob_end_flush();

// kullanıcı tanımlı işlev
function userDefinedFunction($string, $flags) { return $string; };

ob_start('userDefinedFunction');
var_dump(ob_list_handlers());
ob_end_flush();

class MyClass {
    public static function staticHandle($string) {
        return $string;
    }

    public static function handle($string) {
        return $string;
    }

    public function __invoke($string) {
        return $string;
    }
}

// sınıf ve statik yöntem
ob_start(['MyClass','staticHandle']);
var_dump(ob_list_handlers());
ob_end_flush();

// nesne ve statik olmayan yöntem
ob_start([new MyClass,'handle']);
var_dump(ob_list_handlers());
ob_end_flush();

// çağrılabilir nesne
ob_start(new MyClass);
var_dump(ob_list_handlers());ob_end_flush();
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
array(1) {
  [0]=>
  string(22) "default output handler"
}
array(1) {
  [0]=>
  string(22) "default output handler"
}
array(1) {
  [0]=>
  string(7) "print_r"
}
array(1) {
  [0]=>
  string(19) "userDefinedFunction"
}
array(1) {
  [0]=>
  string(17) "Closure::__invoke"
}
array(1) {
  [0]=>
  string(17) "Closure::__invoke"
}
array(1) {
  [0]=>
  string(17) "Closure::__invoke"
}
array(1) {
  [0]=>
  string(21) "MyClass::staticHandle"
}
array(1) {
  [0]=>
  string(15) "MyClass::handle"
}
array(1) {
  [0]=>
  string(17) "MyClass::__invoke"
}
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>ob_end_clean</function></member>
    <member><function>ob_end_flush</function></member>
    <member><function>ob_get_flush</function></member>
    <member><function>ob_start</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
