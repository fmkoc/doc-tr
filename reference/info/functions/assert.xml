<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 27dcb487a7e9c0f04559522a6d2aacf860d622cd Maintainer: nilgun Status: ready -->
<refentry xml:id="function.assert" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>assert</refname>
  <refpurpose>Savın doğruluğuna bakar</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>assert</methodname>
   <methodparam><type>mixed</type><parameter>sav</parameter></methodparam>
   <methodparam choice="opt"><type class="union"><type>Throwable</type><type>string</type><type>null</type></type><parameter>açıklama</parameter><initializer>&null;</initializer></methodparam>
  </methodsynopsis>
  <para>
   <function>assert</function> beklentilerin tanımlanmasını
   sağlayan bir dil oluşumudur: geliştirme ve deneme ortamlarında yürürlüğe
   giren, ancak üretimde sıfır maliyetli olacak şekilde en iyilenmiş savlardır.
  </para>
  <para>
   Savlar yalnızca hata ayıklama özelliği olarak kullanılmalıdır. Bir kullanımı,
   her zaman &true; olması gereken, aksi takdirde bazı yazılım hatalarını
   gösteren ön koşullar için tutarlılık denetimidir. Başka bir kullanımı ise,
   eklenti işlevleri veya belirli sistem sınırları ve özellikleri gibi belirli
   özelliklerin varlığını sınamaktır.
  </para>
  <para>
   Sav denetimi devre dışı bırakılabilecek şekilde yapılandırılabileceğinden,
   girdilerin denetlenmesi gibi normal çalışma zamanı işlemleri için
   kullanılmamalıdır. Genel bir kural olarak, sav denetimi devre dışı
   bırakılsa bile kod beklendiği gibi davranmalıdır.
  </para>
  <para>
   <function>assert</function> oluşumu, <parameter>sav</parameter> ile belirtilen
   beklentinin geçerliliğini sınar.
  </para>

  <para>
   <function>assert</function> oluşumunun davranışı aşağıdaki INI ayarları ile
   değiştirilebilir:
   <table>
    <title>
     Sav yapılandırma yönergeleri
    </title>
    <tgroup cols="4">
     <thead>
      <row>
       <entry>&Name;</entry>
       <entry>&Default;</entry>
       <entry>&Description;</entry>
       <entry>&Changelog;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry><link linkend="ini.zend.assertions">zend.assertions</link></entry>
       <entry><literal>1</literal></entry>
       <entry>
        <simplelist>
         <member>
          <literal>1</literal>: kodu üret ve çalıştır (geliştirme kipi)
         </member>
         <member>
          <!-- TODO: look up the RFC to figure out why you'd want this -->
          <literal>0</literal>: kodu üret ama çalışma anında etrafından dolaş
         </member>
         <member>
          <literal>-1</literal>: kod üretme (üretim kipi)
         </member>
        </simplelist>
       </entry>
       <entry/>
      </row>
      <row>
       <entry><link linkend="ini.assert.active">assert.active</link></entry>
       <entry>&true;</entry>
       <entry>
        &false; ise, <function>assert</function> beklentiyle ilgilenmez
        ve koşulsuz olarak &true; döndürür.
       </entry>
       <entry>
        PHP 8.3.0 ve sonrasında kullanımı önerilmiyor.
       </entry>
      </row>
      <row>
       <entry><link linkend="ini.assert.callback">assert.callback</link></entry>
       <entry>&null;</entry>
       <entry>
        <para>
        Sav başarısız olduğunda çağrılacak kullanıcı tanımlı işlev. Sözdizimi:
        <methodsynopsis role="procedural">
         <type>void</type><methodname>assert_callback</methodname>
         <methodparam><type>string</type><parameter>dosya</parameter></methodparam>
         <methodparam><type>int</type><parameter>satır</parameter></methodparam>
         <methodparam><type>null</type><parameter>sav</parameter></methodparam>
         <methodparam choice="opt"><type>string</type><parameter>açıklama</parameter></methodparam>
        </methodsynopsis>
        </para>
       </entry>
       <entry>
        <para>
        PHP 8.0.0 öncesinde, işlevin sözdizimi şöyle olmalıydı:
        <methodsynopsis role="procedural">
         <type>void</type><methodname>assert_callback</methodname>
         <methodparam><type>string</type><parameter>dosya</parameter></methodparam>
         <methodparam><type>int</type><parameter>satır</parameter></methodparam>
         <methodparam><type>string</type><parameter>sav</parameter></methodparam>
         <methodparam choice="opt"><type>string</type><parameter>açıklama</parameter></methodparam>
        </methodsynopsis>
        </para>
        <simpara>
         PHP 8.3.0 ve sonrasında kullanımı önerilmiyor.
        </simpara>
       </entry>
      </row>
      <row>
       <entry>
        <link linkend="ini.assert.exception">assert.exception</link>
       </entry>
       <entry><literal>0</literal></entry>
       <entry>
        <simplelist>
         <member>
          <literal>1</literal>: Sav başarısız olursa istisnayı yavrula:
          Ya <parameter>istisna</parameter> bağımsız değişkeni ile sağlanan nesneyi
          ya da bir nesne sağlanmamışsa <classname>AssertionError</classname>
          nesnesini.
         </member>
         <member>
          <literal>0</literal>: Yukarıda açıklandığı gibi bir
          <classname>Throwable</classname> kullan veya oluştur, ancak o
          nesneyi örnekllemek yerine nesneyi temel alan bir uyarı oluştur
          (PHP 5 davranışıyla uyumlu)
         </member>
        </simplelist>
       </entry>
       <entry>
        PHP 8.3.0 ve sonrasında kullanımı önerilmiyor.
       </entry>
      </row>
      <row>
       <entry><link linkend="ini.assert.bail">assert.bail</link></entry>
       <entry>&false;</entry>
       <entry>
        &true; ise, beklenti karşılanmazsa PHP betiğinin yürütülmesini iptal eder.
       </entry>
       <entry>
        PHP 8.3.0 ve sonrasında kullanımı önerilmiyor.
       </entry>
      </row>
      <row>
       <entry><link linkend="ini.assert.warning">assert.warning</link></entry>
       <entry>&true;</entry>
       <entry>
        &true; ise, beklenti karşılanmazsa bir <constant>E_WARNING</constant>
        çıktılanır. Bu INI ayarı, <link
        linkend="ini.assert.exception">assert.exception</link>
        etkinleştirilmişse etkisizdir.
       </entry>
       <entry/>
      </row>
     </tbody>
    </tgroup>
   </table>
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>sav</parameter></term>
     <listitem>
      <para>
       Çalıştırılacak ve sonucu, savın başarını belirlemekte kullanılacak
       değeri döndüren bir ifade olmalıdır.
      </para>
      <warning>
       <para>
        PHP 8.0.0 öncesinde, <parameter>sav</parameter> PHP kodu olarak
        yorumlanan ve <function>eval</function> ile yürütülen bir dizge idi.
        Bu dizge geri çağırım işlevine üçüncü bağımsız değişken olarak
        aktarılırdı. PHP 7.2.0'da kullanımı artık
        <emphasis>ÖNERİLMEMEKTE</emphasis> olup PHP 8.0.0'da
        kullanımdan <emphasis>KALDIRILMIŞTIR</emphasis>.
       </para>
      </warning>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>açıklama</parameter></term>
     <listitem>
      <para>
       <parameter>açıklama</parameter> bir <classname>Throwable</classname>
       örneği ise, yalnızca <parameter>sav</parameter> yürütülüp başarısız
       olduğunda yavrulanır.
       <note>
        <para>
         PHP 8.0.0 ve sonrasında, bu, olası bir tanımlanmış onaylama geri
         çağrım işlevi çağrılmadan <emphasis>önce</emphasis> yapılır.
        </para>
       </note>
       <note>
        <para>
         PHP 8.0.0 ve sonrasında, nesne
         <link linkend="ini.assert.exception">assert.exception</link>
         yapılandırmasına bakılmaksızın yavrulanır.
        </para>
       </note>
       <note>
        <para>
         PHP 8.0.0 ve sonrasında, bu durumda
         <link linkend="ini.assert.bail">assert.bail</link> etkisizdir.
        </para>
       </note>
      </para>
      <para>
        <parameter>sav</parameter> başarısız olursa başarısızlık iletisine
       dahil edilecek isteğe bağlı bir açıklama.
       <parameter>açıklama</parameter> bir dizge ise bir istisna veya uyarı
       çıktılanırsa kullanılır.
     </para>
     <para>
      <parameter>açıklama</parameter> kullanılmazsa, derleme zamanında
      <function>assert</function> çağrısı için kaynak koduna eşit öntanımlı
      bir açıklama oluşturulur.
     </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>istisna</parameter></term>
     <listitem>
      <para>
       PHP 7'de, ikinci bağımsız değişken açıklayıcı bir dizge yerine bir
       <classname>Throwable</classname> nesnesi olabilir; sav başarısız
       olursa ve <link linkend="ini.assert.exception">assert.exception</link>
       yapılandırma yönergesi de etkinse bu nesne örneklenir.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Aşağıdakilerin en az biri doğruysa ise &true; döner.
  </para>
  <simplelist>
   <member><literal>zend.assertions=0</literal></member>
   <member><literal>zend.assertions=-1</literal></member>
   <member><literal>assert.exception=1</literal></member>
   <member><literal>assert.bail=1</literal></member>
   <member><parameter>açıklama</parameter>da özel bir istisna nesnesi
    belirtilmiş.</member>
  </simplelist>
  <para>
   Koşulların hiçbiri doğru değilse ancak <parameter>sav</parameter> doğru ise
   <function>assert</function> &true; yoksa &false; ile döner.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>8.3.0</entry>
       <entry>
        <literal>assert.</literal> INI ayarlarının hiçbirinin kullanımı artık
        önerilmiyor.
       </entry>
      </row>
      <row>
       <entry>8.0.0</entry>
       <entry>
        <parameter>açıklama</parameter> bir <classname>Throwable</classname>
        örneği ise, yalnızca <parameter>sav</parameter> yürütülüp başarısız
        olduğunda yavrulanır.
       </entry>
      </row>
      <row>
       <entry>8.0.0</entry>
       <entry>
        <parameter>açıklama</parameter> bir <classname>Throwable</classname>
        örneği ise, atanmış olsa bile geri çağırım işlevi çağrılmaz.
       </entry>
      </row>
      <row>
       <entry>8.0.0</entry>
       <entry>
        <function>assert</function> artık dizge savları değerlendirmeye almıyor,
        herhangi bir bağımsız değişken gibi ele alıyor. Örneğin, <code>assert('$a ==
        $b')</code> yerine artık <code>assert($a == $b)</code> kullanılması
        gerekiyor. <literal>assert.quiet_eval</literal> &php.ini; yönergesi ve
        <constant>ASSERT_QUIET_EVAL</constant> sabiti de kaldırıldı ve artık
        herhangi bir etkisi olmayacak.
       </entry>
      </row>
      <row>
       <entry>8.0.0</entry>
       <entry>
        Bir isim alanı içinde <literal>assert()</literal> adlı bir işlevin
        bildirilmesine artık izin verilmiyor ve böyle bir bildirim olursa
        <constant>E_COMPILE_ERROR</constant> çıktılanıyor.
       </entry>
      </row>
      <row>
       <entry>7.3.0</entry>
       <entry>
        Bir isim alanı içinde <literal>assert()</literal> adlı bir işlev
        bildirimi <emphasis>artık önerilmiyor</emphasis> ve böyle bir
        bildirim olursa bir <constant>E_DEPRECATED</constant> uyarısı
        veriliyor.
       </entry>
      </row>
      <row>
       <entry>7.2.0</entry>
       <entry>
        Sav olarak bir dizge <emphasis>kullanımı artık önerilmiyor</emphasis>.
        Artık hem <link linkend="ini.assert.active">assert.active</link> hem
        de <link linkend="ini.zend.assertions">zend.assertions</link> için 1
        atanmışsa bir <constant>E_DEPRECATED</constant> uyarısı veriliyor.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
   <example>
    <title>- <function>assert</function> örneği</title>
    <programlisting role="php">
<![CDATA[
<?php
assert(1 > 2);
echo 'Hi!';
?>
]]>
    </programlisting>
    <para>
     Savlar etkin olduğunda
     (<link linkend="ini.zend.assertions"><literal>zend.assertions=1</literal></link>
     yukarıdaki örneğin çıktısı:
    </para>
    <screen>
<![CDATA[
Fatal error: Uncaught AssertionError: assert(1 > 2) in example.php:2
Stack trace:
#0 example.php(2): assert(false, 'assert(1 > 2)')
#1 {main}
  thrown in example.php on line 2

]]>
    </screen>
    <para>
     Savlar etkin olmadığında (<literal>zend.assertions=0</literal> veya
     <literal>zend.assertions=-1</literal>) yukarıdaki örneğin çıktısı:
    </para>
    <screen>
<![CDATA[
Hi!
]]>
    </screen>
   </example>
   <example>
    <title>- Özel ileti kullanımı</title>
    <programlisting role="php">
<![CDATA[
<?php
assert(1 > 2, "Birin ikiden büyük olması bekleniyor");
echo 'Hi!';
?>
]]>
    </programlisting>
    <para>
     Savlar etkinken yukarıdaki örneğin çıktısı:
    </para>
    <screen>
<![CDATA[
Fatal error: Uncaught AssertionError: Expected one to be greater than two in example.php:2
Stack trace:
#0 example.php(2): assert(false, 'Expected one to...')
#1 {main}
  thrown in example.php on line 2
]]>
    </screen>
    <para>
     Savlar etkin değilken yukarıdaki örneğin çıktısı:
    </para>
    <screen>
<![CDATA[
Hi!
]]>
    </screen>
   </example>
   <example>
    <title>- Özel istisna sınıfı kullanımı</title>
    <programlisting role="php">
<![CDATA[
<?php
class ArithmeticAssertionError extends AssertionError {}

assert(1 > 2, new ArithmeticAssertionError("Expected one to be greater than two"));
echo 'Hi!';
]]>
    </programlisting>
    <para>
     Savlar etkinken yukarıdaki örneğin çıktısı:
    </para>
    <screen>
<![CDATA[
Fatal error: Uncaught ArithmeticAssertionError: Expected one to be greater than two in example.php:4
Stack trace:
#0 {main}
  thrown in example.php on line 4
]]>
    </screen>
    <para>
     Savlar etkin değilken yukarıdaki örneğin çıktısı:
    </para>
    <screen>
<![CDATA[
Hi!
]]>
    </screen>
   </example>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>assert_options</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
