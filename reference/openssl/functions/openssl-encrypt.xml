<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 6ad22de1921790bfccc8c9a2590a48ab63bf8dd3 Maintainer: nilgun Status: ready -->
<refentry xml:id="function.openssl-encrypt" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>openssl_encrypt</refname>
  <refpurpose>Veriyi şifreler</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type class="union"><type>string</type><type>false</type></type><methodname>openssl_encrypt</methodname>
   <methodparam><modifier role="attribute">#[\SensitiveParameter]</modifier><type>string</type><parameter>veri</parameter></methodparam>
   <methodparam><type>string</type><parameter>yöntem</parameter></methodparam>
   <methodparam><modifier role="attribute">#[\SensitiveParameter]</modifier><type>string</type><parameter>parola</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>seçenekler</parameter><initializer>0</initializer></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>iy</parameter><initializer>""</initializer></methodparam>
   <methodparam choice="opt"><type>string</type><parameter role="reference">etiket</parameter><initializer>&null;</initializer></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>kiml_kntlı_ek_veri</parameter><initializer>""</initializer></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>etiket_uzunluğu</parameter><initializer>16</initializer></methodparam>
  </methodsynopsis>
  <para>
   Belirtilen <parameter>veri</parameter>'yi belirtilen
   <parameter>yöntem</parameter> ve <parameter>parola</parameter> ile
   şifreler ve bir base64 kodlu dizge olarak veya ham bir dizge olarak
   döndürür.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>veri</parameter></term>
     <listitem>
      <para>
       Şifrelenecek düz metin ileti verisi.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>yöntem</parameter></term>
     <listitem>
      <para>
       Şifreleme yöntemi. Şifreleme yöntemlerinin listesi için bkz:
       <function>openssl_get_cipher_methods</function>
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>parola</parameter></term>
     <listitem>
      <para>
       Parola. Beklenenden kısaysa &null; ile dolgu yapılır, uzunsa kırpılır ve bunun için bir uyarı verilmez.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>seçenekler</parameter></term>
     <listitem>
      <para>
       <constant>OPENSSL_RAW_DATA</constant> ve
       <constant>OPENSSL_ZERO_PADDING</constant> veya
       <constant>OPENSSL_DONT_ZERO_PAD_KEY</constant>
       sabitlerinin bitsel birleşimi.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>iy</parameter></term>
      <listitem>
       <para>
       &null; olmayan bir ilklendirme yöneyi.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>etiket</parameter></term>
     <listitem>
      <para>
       AEAD şifreleme kipi (GCM veya CCM) kullanıldığında gönderimli
       aktarılan kimlik kanıtlama etiketi.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>kiml_kntlı_ek_veri</parameter></term>
     <listitem>
      <para>
       Kimlik kanıtlamasından geçmiş ek veri
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>etiket_uzunluğu</parameter></term>
     <listitem>
      <para>
       Kimlik kanıtlama <parameter>etiket</parameter>inin uzunluğu.
       GCM kipinde değer 4-16 arasında olabilir.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   İşlem başarısız olursa &false; yoksa şifrelenmiş veri dizgesi döner.
  </para>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   <parameter>yöntem</parameter> bağımsız değişkeni ile bilinmeyen bir şifreleme
   algoritması belirtilmişse <constant>E_WARNING</constant> seviyesinde bir
   hata oluşur.
  </para>
  <para>
   <parameter>iy</parameter> bağımsız değişkeni üzerinden boş bir dizge aktarılırsa
   <constant>E_WARNING</constant> seviyesinde bir hata oluşur.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <informaltable>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>&Version;</entry>
      <entry>&Description;</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry>7.1.0</entry>
      <entry>
       <parameter>etiket</parameter>,
       <parameter>ek_kiml_knt_verisi</parameter> ve
       <parameter>etiket_uzunluğu</parameter> bağımsız değişkenleri eklendi.
      </entry>
     </row>
    </tbody>
   </tgroup>
  </informaltable>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>- PHP 7.1+ için GCM kipinde AES Kimlik Kanıtlamalı Şifreleme örneği</title>
    <programlisting role="php">
<![CDATA[
<?php
// $key, daha önce openssl_random_pseudo_bytes gibi kriptografik olarak
// güvenilir bir yolla oluşturulmuş olmalıdır.
$plaintext = "şifrelenecek ileti";
$cipher = "aes-128-gcm";
if (in_array($cipher, openssl_get_cipher_methods()))
{
    $ivlen = openssl_cipher_iv_length($cipher);
    $iv = openssl_random_pseudo_bytes($ivlen);
    $ciphertext = openssl_encrypt($plaintext, $cipher, $key, $options=0, $iv, $tag);
    // Şifreyi daha sonra çözmek için $cipher, $iv ve $tag saklanacak
    $original_plaintext = openssl_decrypt($ciphertext, $cipher, $key, $options=0, $iv, $tag);
    echo $original_plaintext."\n";
}
?>
]]>
    </programlisting>
   </example>
   <example>
    <title>- PHP 7.1 öncesi için GCM kipinde AES Kimlik Kanıtlamalı Şifreleme örneği</title>
    <programlisting role="php">
<![CDATA[
<?php
//$key evvelce openssl_random_pseudo_bytes gibi güvenli bir yolla üretilmiş olmalı
$plaintext = "şifrelenecek ileti";
$ivlen = openssl_cipher_iv_length($cipher="AES-128-CBC");
$iv = openssl_random_pseudo_bytes($ivlen);
$ciphertext_raw = openssl_encrypt($plaintext, $cipher, $key, $options=OPENSSL_RAW_DATA, $iv);
$hmac = hash_hmac('sha256', $ciphertext_raw, $key, $as_binary=true);
$ciphertext = base64_encode( $iv.$hmac.$ciphertext_raw );

// daha sonra şifreyi çözmek için....
$c = base64_decode($ciphertext);
$ivlen = openssl_cipher_iv_length($cipher="AES-128-CBC");
$iv = substr($c, 0, $ivlen);
$hmac = substr($c, $ivlen, $sha2len=32);
$ciphertext_raw = substr($c, $ivlen+$sha2len);
$original_plaintext = openssl_decrypt($ciphertext_raw, $cipher, $key, $options=OPENSSL_RAW_DATA, $iv);
$calcmac = hash_hmac('sha256', $ciphertext_raw, $key, $as_binary=true);
if (hash_equals($hmac, $calcmac))// timing attack safe comparison
{
    echo $original_plaintext."\n";
}
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <simplelist>
   <member><function>openssl_decrypt</function></member>
  </simplelist>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
