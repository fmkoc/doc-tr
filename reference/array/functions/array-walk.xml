<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: cec5275f23d2db648df30a5702b378044431be97 Maintainer: nilgun Status: ready -->
<refentry xml:id="function.array-walk" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>array_walk</refname>
  <refpurpose>Bir dizinin her üyesine kullanıcı tanımlı bir işlevi uygular
  </refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>true</type><methodname>array_walk</methodname>
   <methodparam><type class="union"><type>array</type><type>object</type></type><parameter role="reference">dizi</parameter></methodparam>
   <methodparam><type>callable</type><parameter>işlev</parameter></methodparam>
   <methodparam choice="opt"><type>mixed</type><parameter>veri</parameter><initializer>&null;</initializer></methodparam>
  </methodsynopsis>
  <simpara>
   <parameter>dizi</parameter> dizisinin her elemanına kullanıcı tarafından
   tanımlanmış <parameter>işlev</parameter> işlevini uygular.
  </simpara>
  <para>
   <function>array_walk</function> işlevi dizinin dahili göstericisinin
   konumunda etkilenmez. Dizinin dahili göstericisini dikkate almaksızın dizi
   elemanları üzerinde sırayla işlem yapar.
  </para>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>dizi</parameter></term>
     <listitem>
      <para>
       İşleme sokulacak dizi.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>işlev</parameter></term>
     <listitem>
      <para>
       Normalde, <parameter>işlev</parameter> iki bağımsız değişken alır. İlki
       <parameter>dizi</parameter> bağımsız değişkeninin değeri, ikincisi ise
       indis veya anahtardır.
      </para>
      <note>
       <para>
        Eğer <parameter>işlev</parameter> işlevinin doğrudan dizinin kendisi
        üzerinde işlem yapması gerekiyorsa işlevin ilk bağımsız değişkeni bir
        <link linkend="language.references">gönderim</link> olarak belirtilir.
        Böylece elemanlar üzerinde yapılan her değişiklik özgün dizide de
        yapılmış olur.
       </para>
      </note>
      <note>
        <para>
         Birçok dahili işlev, (örneğin, <function>strtolower</function>),
         beklenenden fazla bağımsız değişken aktarılırsa ve doğrudan
         <parameter>işlev</parameter> olarak kullanılamazsa bir uyarı çıktılar.
        </para>
      </note>
      <para>
       Potansiyel olarak yalnızca <parameter>dizi</parameter> değerleri
       değiştirilebilir; yapısı değiştirilemez, yani programcı öğeleri
       ekleyemez, ayarlayamaz veya yeniden sıralayamaz. Geri çağırım
       <parameter>işlev</parameter>i bu gereksinimi karşılamıyorsa,
       <function>array_walk</function> işlevinin davranışı tanımsızdır ve
       öngörülemez.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>veri</parameter></term>
     <listitem>
      <para>
       Eğer isteğe bağlı <parameter>veri</parameter> bağımsız değişkeni
       belirtilmişse, değeri <parameter>işlev</parameter> işlevine üçüncü
       bağımsız değişken olarak aktarılır.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.true.always;
  </para>
 </refsect1>
 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   PHP 7.1.0'dan itibaren, geri çağırım <parameter>işlev</parameter>i 2'den
   fazla bağımsız değişken (dizi üyesinin değeri ve anahtarı) gerektiriyorsa veya
   isteğe bağlı <parameter>veri</parameter> bağımsız değişkeninin belirtilmesi
   durumunda 3'ten fazla bağımsız değişken gerektiriyorsa, bir
   <classname>ArgumentCountError</classname> istisnası üretilir. Evvelce,
   <parameter>işlev</parameter> belirtilenden daha fazla bağımsız değişken
   gerektirdiğinde <function>array_walk</function> işlevinin yaptığı her
   <parameter>işlev</parameter> çağrısında
   <link linkend="errorfunc.constants">E_WARNING</link> seviyesinde bir
   uyarı üretilirdi.
  </para>
 </refsect1>
 <refsect1 role="changelog">
  &reftitle.changelog;
  <informaltable>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>&Version;</entry>
      <entry>&Description;</entry>
     </row>
    </thead>
    <tbody>
     &return.type.true;
     <row>
      <entry>8.0.0</entry>
      <entry>
       <parameter>işlev</parameter> geri çağırım işlevinin ikinci ve üçüncü
       bağımsız değişkeni için de gönderimli bağımsız değişken gerekiyorsa bu işlev
       artık <constant>E_WARNING</constant> seviyesinde bir uyarı üretiyor.
      </entry>
     </row>
    </tbody>
   </tgroup>
  </informaltable>
 </refsect1>
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>- <function>array_walk</function> örneği</title>
    <programlisting role="php">
<![CDATA[
<?php
$fruits = array("d" => "limon", "a" => "ayva", "b" => "muz", "c" => "elma");

function test_alter(&$item1, $key, $prefix)
{
    $item1 = "$prefix: $item1";
}

function test_print($item2, $key)
{
    echo "$key. $item2\n";
}

echo "Önce ...:\n";
array_walk($fruits, 'test_print');

array_walk($fruits, 'test_alter', 'fruit');
echo "... ve sonra:\n";

array_walk($fruits, 'test_print');
?>
]]>
    </programlisting>
    &example.outputs;
    <screen role="php">
<![CDATA[
Önce ...:
d. limon
a. ayva
b. muz
c. elma
... ve sonra:
d. meyve: limon
a. meyve: ayva
b. meyve: muz
c. meyve: elma
]]>
    </screen>
   </example>
  </para>
  <para>
   <example>
    <title>- İsimsiz işlev kullanılan <function>array_walk</function> örneği</title>
    <programlisting role="php">
<![CDATA[
<?php
$elements = ['a', 'b', 'c'];

array_walk($elements, function ($value, $key) {
  echo "{$key} => {$value}\n";
});

?>
]]>
    </programlisting>
    &example.outputs;
    <screen role="php">
<![CDATA[
0 => a
1 => b
2 => c
]]>
    </screen>
   </example>
  </para>
 </refsect1>
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>array_walk_recursive</function></member>
    <member><function>iterator_apply</function></member>
    <member><function>list</function></member>
    <member><function>each</function></member>
    <member><function>call_user_func_array</function></member>
    <member><function>array_map</function></member>
    <member>&foreach;</member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
