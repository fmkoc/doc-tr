<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 62126c55f1c6ed444043e7272c4f9e233818a44b Maintainer: nilgun Status: ready -->
<!-- CREDITS: bvicil -->
<refentry xml:id="function.substr" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>substr</refname>
  <refpurpose>Dizgenin bir kısmını döndürür</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>string</type><methodname>substr</methodname>
   <methodparam><type>string</type><parameter>dizge</parameter></methodparam>
   <methodparam><type>int</type><parameter>başlangıç</parameter></methodparam>
   <methodparam choice="opt"><type class="union"><type>int</type><type>null</type></type><parameter>uzunluk</parameter><initializer>&null;</initializer></methodparam>
  </methodsynopsis>
  <para>
   <parameter>dizge</parameter>'nin <parameter>başlangıç</parameter>'tan
   itibaren <parameter>uzunluk</parameter> uzunluğunda parçasını döndürür.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>dizge</parameter></term>
     <listitem>
      <para>
       Girilen dizge.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>başlangıç</parameter></term>
     <listitem>
      <para>
       Eğer <parameter>başlangıç</parameter> bağımsız değişkeni negatif değilse
       geri dönen dizge değeri, <parameter>dizge</parameter>'nin 0'dan itibaren
       <parameter>başlangıç</parameter>'ıncı konumundan başlar. Mesela,
       '<literal>abcdef</literal>' dizgesinde, <literal>0</literal>'ıncı
       konumdaki karakter '<literal>a</literal>', <literal>2</literal>'inci
       konumdaki karakter '<literal>c</literal>'dir.
      </para>
      <para>
       Eğer <parameter>başlangıç</parameter> bağımsız değişkeni negatif ise, dönen
       dizge değeri <parameter>dizge</parameter>'nin sonundan
       <parameter>başlangıç</parameter> karakter önce başlar.
      </para>
      <para>
       Eğer <parameter>dizge</parameter> uzunluğu
       <parameter>başlangıç</parameter> dizgesinin uzunluğundan küçükse
       işlev boş dizge döndürür.
      </para>
      <para>
       <example>
        <title>- Negatif <parameter>başlangıç</parameter> kullanımı</title>
        <programlisting role="php">
<![CDATA[
<?php
$rest = substr("abcdef", -1);    // "f" döndürür
$rest = substr("abcdef", -2);    // "ef" döndürür
$rest = substr("abcdef", -3, 1); // "d" döndürür
?>
]]>
        </programlisting>
       </example>
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>uzunluk</parameter></term>
     <listitem>
      <para>
       Eğer <parameter>uzunluk</parameter> bağımsız değişkeni verildiyse ve pozitifse
       dönen dizge, <parameter>dizge</parameter>'nin uzunluğuna göre
       <parameter>başlangıç</parameter>'tan itibaren
       <parameter>uzunluk</parameter>'ta belirtilen karakter sayısı kadar
       karakter içerir.
      </para>
      <para>
       Eğer <parameter>uzunluk</parameter> bağımsız değişkeni verildiyse ve
       negatifse <parameter>dizge</parameter>'nin sonundan belirtilen kadar
       karakter çıkartılır (<parameter>başlangıç</parameter> negatif ise önce
       başlagıç konumu hesaplanır). Eğer <parameter>başlangıç</parameter>
       bağımsız değişkeni negatif uzunlukla çıkarılan parçanın içindeki bir yeri
       işaret ediyorsa boş dizge döner.
      </para>
      <para>
       <parameter>uzunluk</parameter> belirtilmiş ve <literal>0</literal> ise
       boş bir dizge döner.
      </para>
      <para>
       <parameter>uzunluk</parameter> atlanırsa veya &null; ise,
       <parameter>başlangıç</parameter>'tan başlayarak dizenin sonuna kadar
       olan alt dizge döndürülür.
      </para>
      <example>
       <title>- Negatif <parameter>uzunluk</parameter> kullanımı</title>
       <programlisting role="php">
<![CDATA[
<?php
$rest = substr("abcdef", 0, -1);  // "abcde" döndürür
$rest = substr("abcdef", 2, -1);  // "cde" döndürür
$rest = substr("abcdef", 4, -4);  // "" döndürür; PHP 8.0.0 öncesinde false dönerdi
$rest = substr("abcdef", -3, -1); // "de" döndürür
?>
]]>
       </programlisting>
      </example>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   <parameter>dizge</parameter>'nin çıkarılan kısmı ya da boş dizge döner.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <informaltable>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>&Version;</entry>
      <entry>&Description;</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry>8.0.0</entry>
      <entry>
       <parameter>uzunluk</parameter> artık &null; olabiliyor.
       <parameter>uzunluk</parameter> bağımsız değişkenine açıkça &null; atanmışsa
       dizgenin sonunda biten bir alt dizge döner, evvelce bu durumda boş
       dizge dönerdi.
      </entry>
     </row>
     <row>
      <entry>8.0.0</entry>
      <entry>
       İşlev evvelce &false; döndürdüğü durumda şimdi boş bir dizge döndürüyor.
      </entry>
     </row>
    </tbody>
   </tgroup>
  </informaltable>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>- Basit <function>substr</function> kullanımı</title>
    <programlisting role="php">
<![CDATA[
<?php
echo substr('abcdef', 1);     // bcdef
echo substr("abcdef", 1, null); // bcdef; PHP 8.0.0 öncesinde, boş dizge dönerdi
echo substr('abcdef', 1, 3);  // bcd
echo substr('abcdef', 0, 4);  // abcd
echo substr('abcdef', 0, 8);  // abcdef
echo substr('abcdef', -1, 1); // f

// Dizge içerisindeki tek bir karaktere ulaşmak için
// "köşeli ayraçlar" da kullanılabilir.
$dizge = 'abcdef';
echo $dizge[0];                 // a
echo $dizge[3];                 // d
echo $dizge[strlen($dizge)-1];  // f

?>
]]>
    </programlisting>
   </example>
   <example>
    <title>- <function>substr</function> tür dönüşüm davranışı</title>
    <programlisting role="php">
<![CDATA[
<?php
class apple {
    public function __toString() {
        return "green";
    }
}

echo "1) ".var_export(substr("pear", 0, 2), true).PHP_EOL;
echo "2) ".var_export(substr(54321, 0, 2), true).PHP_EOL;
echo "3) ".var_export(substr(new apple(), 0, 2), true).PHP_EOL;
echo "4) ".var_export(substr(true, 0, 1), true).PHP_EOL;
echo "5) ".var_export(substr(false, 0, 1), true).PHP_EOL;
echo "6) ".var_export(substr("", 0, 1), true).PHP_EOL;
echo "7) ".var_export(substr(1.2e3, 0, 4), true).PHP_EOL;
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
1) 'pe'
2) '54'
3) 'gr'
4) '1'
5) ''
6) ''
7) '1200'
]]>
    </screen>
   </example>
  </para>
  <example>
   <title>- Geçersiz karakter aralığı</title>
   <para>
    Geçersiz bir karakter aralığı istenmişse, <function>substr</function>
    PHP 8.0.0 ve sonrasına boş dizge döndürüyor, evvelce &false; döndürürdü.
   </para>
   <informalexample>
    <programlisting role="php">
<![CDATA[
<?php
var_dump(substr('a', 2));
?>
]]>
    </programlisting>
    &example.outputs.8;
    <screen>
<![CDATA[
string(0) ""
]]>
    </screen>
    &example.outputs.7;
    <screen>
<![CDATA[
bool(false)
]]>
    </screen>
   </informalexample>
  </example>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>strrchr</function></member>
    <member><function>substr_replace</function></member>
    <member><function>preg_match</function></member>
    <member><function>trim</function></member>
    <member><function>mb_substr</function></member>
    <member><function>wordwrap</function></member>
    <member><link linkend="language.types.string.substr">Dizge erişimi ve
     karaktere göre değişiklik</link></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
