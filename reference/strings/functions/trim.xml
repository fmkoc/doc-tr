<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 3d38c9a1ce92c93fdf8c43f067c7ae7b4ad73885 Maintainer: nilgun Status: ready -->
<!-- CREDITS: bvicil -->
<refentry xml:id="function.trim" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>trim</refname>
  <refpurpose>Dizgenin başındaki ve sonundaki boşlukları (veya diğer
  karakterleri) budar</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>string</type><methodname>trim</methodname>
   <methodparam><type>string</type><parameter>dizge</parameter></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>karakterler</parameter><initializer>" \n\r\t\v\x00"</initializer></methodparam>
  </methodsynopsis>
  <para>
   Bu işlev <parameter>dizge</parameter>'nin başındaki ve sonundaki
   boşlukları budar. İkinci bağımsız değişken olmaksızın <function>trim</function>
   sadece aşağıdaki karakterleri budayacaktır:
   <!-- sorted by importance. Printed 3 times: trim, ltrim, rtrim -->
   <itemizedlist>
    <listitem>
     <simpara>
      " " (<acronym>ASCII</acronym> <literal>32</literal>
      (<literal>0x20</literal>)), sıradan boşluk.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      "\t" (<acronym>ASCII</acronym> <literal>9</literal>
      (<literal>0x09</literal>)), sekme.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      "\n" (<acronym>ASCII</acronym> <literal>10</literal>
      (<literal>0x0A</literal>)), satırsonu.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      "\r" (<acronym>ASCII</acronym> <literal>13</literal>
      (<literal>0x0D</literal>)), satırbaşı.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      "\0" (<acronym>ASCII</acronym> <literal>0</literal>
      (<literal>0x00</literal>)), <literal>NUL</literal>-bayt.
     </simpara>
    </listitem>
    <listitem>
     <simpara> <!-- not \v, since not supported by PHP -->
      "\v" (<acronym>ASCII</acronym> <literal>11</literal>
      (<literal>0x0B</literal>)), dikey sekme.
     </simpara>
    </listitem>
   </itemizedlist>
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>dizge</parameter></term>
     <listitem>
      <para>
       Budanacak dizge.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>karakterler</parameter></term>
     <listitem>
      <para>
       Seçimlik olarak, <parameter>karakterler</parameter> bağımsız değişkeni
       kullanılarak budanacak karakterler belirlenebilir.
       Basitçe budamak istenen tüm karakterler belirtilir. Karakter
       artırım aralığını <literal>..</literal> kullanarak belirtmek mümkündür.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Budanmış dizge.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>- <function>trim</function> işlevinin kullanımı</title>
    <programlisting role="php">
<![CDATA[
<?php

$metin   = "\t\tBir kaç kelam :) ...  ";
$ikil = "\x09Örnek dizge\x0A";
$selam  = "Merhaba Dünya";
var_dump($metin, $ikil, $selam);

print "\n";

$kırpık = trim($metin);
var_dump($kırpık);

$kırpık = trim($metin, " \t.");
var_dump($kırpık);

$kırpık = trim($selam, "aerMy");
var_dump($kırpık);

// $ikil'in başındaki ve sonundaki ASCII denetim karakterlerini budar
// (0'dan 31'e kadar, 0 ve 31 dahil)
$temiz = trim($ikil, "\x00..\x1F");
var_dump($temiz);

?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
string(25) "            Bir kaç kelam :) ...  "
string(14) "    Örnek dizge
"
string(14) "Merhaba Dünya"

string(21) "Bir kaç kelam :) ..."
string(17) "Bir kaç kelam :)"
string(9) "haba Dün"
string(12) "Örnek dizge"
]]>
    </screen>
   </example>
  </para>
  <para>
   <example>
    <title>- <function>trim</function> işlevini dizi değerlerine uygulama
    </title>
    <programlisting role="php">
<![CDATA[
<?php
function değeri_buda(&$değer)
{
    $değer = trim($değer);
}

$meyve = array('elma','muz ', ' muşmula ');
var_dump($meyve);

array_walk($meyve, 'değeri_buda');
var_dump($meyve);

?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
array(3) {
  [0]=>
  string(4) "elma"
  [1]=>
  string(4) "muz "
  [2]=>
  string(10) " muşmula "
}
array(3) {
  [0]=>
  string(4) "elma"
  [1]=>
  string(3) "muz"
  [2]=>
  string(8) "muşmula"
}
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <title>Olası sorun: Aradaki karakterlerin kaldırılması</title>
   <para>
    <function>trim</function> karakterleri bir dizenin başından ve sonundan
    kırptığı için, aradaki karakterlerin kırpılması (veya kırpılmaması) kafa
    karıştırıcı olabilir. <literal>trim('abc', 'bad')</literal> hem 'a' hem de
    'b'yi kırpar, çünkü 'a'yı kırpar, böylece 'b' de kırpılmak üzere başa
    taşınmış olur. Yani, bu "çalışıyor" da <literal>trim('abc', 'b')</literal>
    "neden çalışmıyor"un açıklaması budur.
   </para>
  </note>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>ltrim</function></member>
    <member><function>rtrim</function></member>
    <member><function>str_replace</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
