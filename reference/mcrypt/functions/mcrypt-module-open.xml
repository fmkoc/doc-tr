<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: f27cfeeefc13717f86a53d7fefa0ce54f7bfaaaf Maintainer: nilgun Status: ready -->
<refentry xml:id="function.mcrypt-module-open" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>mcrypt_module_open</refname>
  <refpurpose>Kullanılacak kipi ve algoritma modülünü açar</refpurpose>
 </refnamediv>

 <refsynopsisdiv>
  &warn.deprecated.function-7-1-0.removed-7-2-0;
 </refsynopsisdiv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>resource</type><methodname>mcrypt_module_open</methodname>
   <methodparam><type>string</type><parameter>algoritma</parameter></methodparam>
   <methodparam><type>string</type><parameter>algoritma_dizini</parameter></methodparam>
   <methodparam><type>string</type><parameter>kip</parameter></methodparam>
   <methodparam><type>string</type><parameter>kip_dizini</parameter></methodparam>
  </methodsynopsis>
  <para>
   Kullanılacak kipi ve algoritma modülünü açar. Algoritma doğrudan ismiyle belirtilebileceği gibi (<literal>"twofish"</literal> gibi), <constant>MCRYPT_</constant><replaceable>şifre_adı</replaceable> sabitlerinden biri de belirtilebilir. Modülü kapatmak için  <function>mcrypt_module_close</function> kullanılır.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>algoritma</parameter></term>
     <listitem>
      &mcrypt.parameter.cipher;
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>algoritma_dizini</parameter></term>
     <listitem>
      <para>
      <parameter>algorithm_dizini</parameter> şifreleme modüllerinin yerlerini
      belirtmek için kullanılır. Bir dizin yerine boş bir dizge belirtirseniz
      <parameter>mcrypt.algorithms_dir</parameter> &php.ini; yönergelerinin
      değerleri kullanılır. Atanmamışsa libmcrypt derlenirken
      kullanılan öntanımlı dizinler kullanılır (genellikle
      <filename>/usr/local/lib/libmcrypt</filename>).
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>kip</parameter></term>
     <listitem>
      &mcrypt.parameter.mode;
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>kip_dizini</parameter></term>
     <listitem>
      <para>
      <parameter>kip_dizini</parameter> şifreleme modüllerinin yerlerini
      belirtmek için kullanılır. Bir dizin yerine boş bir dizge belirtirseniz
      <parameter>mcrypt.modes_dir</parameter> &php.ini; yönergelerinin
      değerleri kullanılır. Atanmamışsa libmcrypt derlenirken
      kullanılan öntanımlı dizinler kullanılır (genellikle
      <filename>/usr/local/lib/libmcrypt</filename>).
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Bir hata durumunda &false; yoksa bir şifreleme tanıtıcısı döndürür.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>- <function>mcrypt_module_open</function> örnekleri</title>
    <programlisting role="php">
<![CDATA[
<?php
    $şt = mcrypt_module_open(MCRYPT_DES, '',
        MCRYPT_MODE_ECB, '/usr/lib/mcrypt-modes');

    $şt = mcrypt_module_open('rijndael-256', '', 'ofb', '');
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   Yukarıdaki örnekteki ilk satır öntanımlı dizindeki <literal>DES</literal>
   şifre modülünü ve <filename>/usr/lib/mcrypt-modes</filename> dizinindeki
   <literal>ECB</literal> kip modülünü açacaktır. İkinci örnekte şifre ve kip
   için isimleri kullanılmaktadır. Bu örnek sadece eklenti, libmcrypt 2.4.x
   veya 2.5.x desteğiyle derlenmişse çalışacaktır.
  </para>

  <para>
   <example>
    <title>- Şifreleme için <function>mcrypt_module_open</function>
      kullanımı</title>
    <programlisting role="php">
<![CDATA[
<?php
    /* Şifre modülünü açalım */
    $şt = mcrypt_module_open('rijndael-256', '', 'ofb', '');

    /* IV'yi oluşturup anahtar uzunluğunu belirleyelim.
       Windows'ta bunun yerine MCRYPT_RAND kullanın */
    $iv = mcrypt_create_iv(mcrypt_enc_get_iv_size($şt), MCRYPT_DEV_RANDOM);
    $ks = mcrypt_enc_get_key_size($şt);

    /* Anahtarı oluşturalım */
    /* (örneğe özel: bunun için MD5 iyi bir aş algoritması değil) */
    $tuz = substr(hash('md5', 'epeyce gizli anahtar'), 0, $ks);

    /* Şifreleme işlemini ilklendirelim */
    mcrypt_generic_init($şt, $tuz, $iv);

    /* Veriyi şifreleyelim */
    $şifreli = mcrypt_generic($şt, 'Bu çok önemli bir veridir.');

    /* Şifre tanıtıcısını sonlandıralım */
    mcrypt_generic_deinit($şt);

    /* Şifreleme modülünü şifre çözmek için ilklendirelim */
    mcrypt_generic_init($şt, $tuz, $iv);

    /* Verinin şifresini çözelim */
    $şifresiz = mdecrypt_generic($şt, $şifreli);

    /* Şifre çözme tanıtıcısını sonlandıralım ve modülü kapatalım */
    mcrypt_generic_deinit($şt);
    mcrypt_module_close($şt);

    /* Dizgeyi gösterelim */
    echo trim($şifresiz) . "\n";
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>mcrypt_module_close</function></member>
    <member><function>mcrypt_generic</function></member>
    <member><function>mdecrypt_generic</function></member>
    <member><function>mcrypt_generic_init</function></member>
    <member><function>mcrypt_generic_deinit</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
