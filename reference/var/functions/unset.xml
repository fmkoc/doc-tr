<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 9f30ccc6aa0dabe411c52305202fe85209ddc06b Maintainer: nilgun Status: ready -->
<refentry xml:id="function.unset" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>unset</refname>
  <refpurpose>Belirtilen değişkeni bildirimsiz yapar</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>void</type><methodname>unset</methodname>
   <methodparam><type>mixed</type><parameter>değişken</parameter></methodparam>
   <methodparam rep="repeat"><type>mixed</type><parameter>değişkenler</parameter></methodparam>
  </methodsynopsis>
  <para>
   <function>unset</function> işlevi belirtilen değişkenleri hiç tanımlanmamış
   duruma getirir.
  </para>
  <para>
   İşlevin başka bir işlev içindeki davranışı tanımsız yapılmaya çalışılan
   değişkenin türüne bağlıdır.
  </para>
  <para>
   Aşağıdaki örnekte işlevin içinde yokedilmeye çalışılan değişken işlev
   içinde küreselleştirilmiş bir değişken olup değişkenin sadece yerel tanımı
   yok edilir. Değişkenin çağrı ortamındaki değeri <function>unset</function>
   çağrılmadan önceki değerini korur.
  </para>
   <informalexample>
    <programlisting role="php">
<![CDATA[
<?php
function foo_yu_gebert()
{
    global $foo;
    unset($foo);
}

$foo = 'bar';
foo_yu_gebert();
echo $foo;
?>
]]>
    </programlisting>
   </informalexample>
  &example.outputs;
   <informalexample>
    <screen>
<![CDATA[
bar
]]>
    </screen>
   </informalexample>
  <para>
   Bir küresel değişkeni bir işlev içinde yoketmeniz gerekliyse
   <varname>$GLOBALS</varname> dizisini kullanabilirsiniz:
  </para>
   <informalexample>
    <programlisting role="php">
<![CDATA[
<?php
function foo()
{
    unset($GLOBALS['bar']);
}

$bar = "something";
foo();
?>
]]>
    </programlisting>
   </informalexample>
  <para>
   Gönderimli aktarılan bir değişkeni bir işlev içinde yoketmeye çalışırsanız
   sadece yerel değişkeni yoketmiş olursunuz. Değişkenin, işlevin çağrıldıgı
   ortamdaki değeri <function>unset</function> çağrılmadan önceki değerini
   korur.
  </para>
   <informalexample>
    <programlisting role="php">
<![CDATA[
<?php
function foo(&$bar)
{
    unset($bar);
    $bar = "başka bir şey";
}

$bar = 'bir şey';
echo "$bar\n";

foo($bar);
echo "$bar\n";
?>
]]>
    </programlisting>
   </informalexample>
   &example.outputs;
   <informalexample>
    <screen>
<![CDATA[
bir şey
bir şey
]]>
    </screen>
   </informalexample>
  <para>
   Bir duruk değişkeni bir işlev içinde yoketmeye çalışırsanız
   değişkeni sadece işlevin kalan bağlamı için yoketmiş olursunuz. Aşağıdaki
   çağrılar değişkenin önceki değerinin geçerli kaldığını gösterecektir.
  </para>
   <informalexample>
    <programlisting role="php">
<![CDATA[
<?php
function foo()
{
    static $bar;
    $bar++;
    echo "unset öncesi: $bar, ";
    unset($bar);
    $bar = 23;
    echo "unset sonrası: $bar\n";
}

foo();
foo();
foo();
?>
]]>
    </programlisting>
   </informalexample>
   &example.outputs;
   <informalexample>
    <screen>
<![CDATA[
unset öncesi: 1, unset sonrası: 23
unset öncesi: 2, unset sonrası: 23
unset öncesi: 3, unset sonrası: 23
]]>
    </screen>
   </informalexample>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>değişken</parameter></term>
     <listitem>
      <para>
       Yokedilecek değişken.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>değişkenler</parameter></term>
     <listitem>
      <para>
       Yokedilecek değişkenler.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.void;
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>- <function>unset</function> örneği</title>
    <programlisting role="php">
<![CDATA[
<?php
// tek bir değişkeni yokedelim
unset($foo);

// Bir dizinin tek bir elemanını yokedelim
unset($bar['quux']);

// birden fazla değiykeni yokedelim
unset($foo1, $foo2, $foo3);
?>
]]>
    </programlisting>
   </example>
   <example>
    <title>- (unset) - &null;'a dönüşüm örneği</title>
    <para>
     <link linkend="language.types.null.casting"><literal>(unset)</literal></link>
     dönüşümü çoğunlukla <function>unset</function> işlevi ile karıştırılır.
     <literal>(unset)</literal> dönüşümü bütünlük adına, sadece
     <literal>NULL</literal> döndürür, dönüşüm yaptığı değişkene &null;
     atamaz, yani işlev gibi değişkeni bildirimsiz yapmaz.
     <literal>(unset)</literal> dönüşümünün kullanımı PHP 7.2.0
     ve sonrasında önerilmemekte olup 8.0.0'da kullanımdan kaldırılmıştır.
    </para>
    <programlisting role="php">
<![CDATA[
<?php
$name = 'Felipe';

var_dump((unset) $name);
var_dump($name);
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
NULL
string(6) "Felipe"
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  &note.language-construct;
  <note>
   <para>
    Nesne özelliklerini geçerli bağlamda görünür olsalar bile yoketmek
    mümkündür.
   </para>
   <para>
     Bildirilmişse, tanımsız özelliğe erişirken
     <link linkend="object.get">__get()</link>, atama yapılırken
     <link linkend="object.set">__set()</link> çağrılır.
   </para>
  </note>
  <note>
   <para>
    Bir nesne yöntemi içinde <literal>$this</literal> yokedilemez.
   </para>
  </note>
  <note>
   <para>
    <function>unset</function> erişilir olmayan nesne özellikleri
    kullanıyorsa, bildirimli olduğu taktirde
    <link linkend="object.unset">__unset()</link> yöntemi çağrılabilir.
   </para>
  </note>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>isset</function></member>
    <member><function>empty</function></member>
    <member><link linkend="object.unset">__unset()</link></member>
    <member><function>array_splice</function></member>
    <member>
     <link linkend="language.types.null.casting">(unset) dönüşümü</link>
    </member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
