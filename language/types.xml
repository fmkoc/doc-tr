<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: f908fff129bcd8ec1605658e06457cb04e5b2b51 Maintainer: nilgun Status: ready -->
<chapter xml:id="language.types" xmlns="http://docbook.org/ns/docbook">
 <title>Türler</title>

 <sect1 xml:id="language.types.intro">
  <title>Giriş</title>

  <para>
   PHP'deki her ifadenin türü, değerine bağlı olarak aşağıdaki yerleşik
   türlerden biridir:
   <itemizedlist>
    <listitem><simpara><type>null</type></simpara></listitem>
    <listitem><simpara><type>bool</type> (mantıksal)</simpara></listitem>
    <listitem><simpara><type>int</type> (tamsayı)</simpara></listitem>
    <listitem><simpara><type>float</type> (gerçek sayı)</simpara></listitem>
    <listitem><simpara><type>string</type> (dizge)</simpara></listitem>
    <listitem><simpara><type>array</type> (dizi)</simpara></listitem>
    <listitem><simpara><type>object</type> (nesne)</simpara></listitem>
    <listitem><simpara><type>callable</type> (çağrılabilen)</simpara></listitem>
    <listitem><simpara><type>resource</type> (özkaynak)</simpara></listitem>
   </itemizedlist>
  </para>


  <para>
   PHP dinamik olarak yazılan bir dildir, yani bir değişkenin türü çalışma
   anında belirleneceği için türü belirtmeye gerek olmadığı varsayılır.
   Bununla birlikte, <link linkend="language.types.declarations">tür
   bildirimlerini</link> kullanarak dilin bazı yönlerini statik olarak
   yazmak mümkündür.
  </para>

  <para>
   Türler, üzerlerinde gerçekleştirilebilecek işlem türlerini kısıtlar.
   Bununla birlikte, bir işlemde türünün desteklemediği bir ifade veya
   değişken kullanılırsa, PHP değerin türünü işlemi destekleyen <link
   linkend="language.types.type-juggling">türe dönüştürmeye</link> çalışır.
   Bu süreç, değerin kullanıldığı bağlama bağlıdır. Daha fazla bilgi
   <link linkend="language.types.type-juggling">Tür Dönüşümü</link>
   bölümünde bulunabilir.
  </para>

  <tip>
   <simpara>
    Farklı türdeki değerler arasında karşılaştırma örnekleri
    <link linkend="types.comparisons">tür karşılaştırma tablolarında</link>
    bulunabilir.
   </simpara>
  </tip>

  <note>
   <simpara>
    <link linkend="language.types.typecasting">Tür çarpıtma</link> kullanarak
    bir ifadenin belirli bir türe göre değerlendirilmesini sağlamak mümkündür.
    Bir değişkenin türü ayrıca, <function>settype</function> işlevi ile
    kullanıldığı bağlamda da değiştirilebilir.
   </simpara>
  </note>

  <para>
   Bir <link linkend="language.expressions">ifadenin</link> değerini ve türünü
   denetlemek için <function>var_dump</function> işlevi kullanılabilir. Bir
   <link linkend="language.expressions">ifadenin</link> yalnızca türü
   öğrenilmek istenirse <function>get_debug_type</function> işlevi
   kullanılabilir. Ancak, bir ifadenin belirli bir türde olup olmadığını
   saptamak için <literal>is_<replaceable>tür</replaceable></literal> işlevleri
   kullanılmalıdır.

   <informalexample>
    <programlisting role="php">
<![CDATA[
<?php
$a_bool = true;   // bool türünde
$a_str  = "foo";  // string türünde
$a_str2 = 'foo';  // string türünde
$an_int = 12;     // int  türünde

echo get_debug_type($a_bool), "\n";
echo get_debug_type($a_str), "\n";

// Değişken bir tamsayı ise değeri dört arttır
if (is_int($an_int)) {
    $an_int += 4;
}
var_dump($an_int);

// $a_bool bir dizge ise değeri çıktıla
if (is_string($a_bool)) {
    echo "Dizge: $a_bool";
}
?>
]]>
    </programlisting>
    &example.outputs.8;
    <screen>
<![CDATA[
bool
string
int(16)
]]>
    </screen>
   </informalexample>
  </para>
  <note>
   <simpara>
    PHP 8.0.0 öncesinde, <function>get_debug_type</function>
    kullanılamadığından, yerine <function>gettype</function> kullanılabilir.
    Ancak, bu işlevin döndürdüğü bazı tür adları bu belgedekinden farklı
    olabilir. PHP tür sisteminin desteklediği farklı türler <link
    linkend="language.types.type-system">tür sistemi</link> sayfasında
    bulunabilir.
   </simpara>
  </note>

 </sect1>

 &language.types.type-system;
 &language.types.null;
 &language.types.boolean;
 &language.types.integer;
 &language.types.float;
 &language.types.string;
 &language.types.numeric-strings;
 &language.types.array;
 &language.types.object;
 &language.types.enumerations;
 &language.types.resource;
 &language.types.callable;
 &language.types.mixed;
 &language.types.void;
 &language.types.never;
 &language.types.relative-class-types;
 &language.types.singleton;
 &language.types.iterable;
 &language.types.declarations;
 &language.types.type-juggling;

</chapter>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
